
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream orchestrator {
         server {Orchestrator Server Name}:443; #cf orchestrator.domain.local:443
          keepalive 16;
    }

    upstream mulesoft {
         server localhost:8081;
    }


    # UiPath Orchestrator
    server {

        server_name  {Nginx-listenning Server Name}; #cf nginx.domain.local
        listen       443 ssl;

        keepalive_requests 500;

        ssl_certificate      {Path to certificate file for Nginx}/{certificate file name};
        ssl_certificate_key  {Path to private key file for Nginx}/{private key file name};
        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  1h;
        ssl_buffer_size 4k;
        ssl_protocols  SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers  on;
        ssl_verify_client  off;

        location / {

	    proxy_ssl_server_name on;
            proxy_ssl_name {Orchestrator Server Name};
            proxy_pass https://orchestrator;
            proxy_ssl_session_reuse off;
            proxy_redirect https://{Orchestrator Server Name} https://{Nginx-listenning Server Name};

            proxy_http_version 1.1;  
            proxy_ssl_password_file {Path to password file for Orchestrator}/{Password File Name};
            proxy_ssl_certificate {Path to Certificate file for Orchestrator}/{Certificate File Name};
            proxy_ssl_certificate_key {Path to private key file for Orchestrator}/{Private Key File Name};
            proxy_ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
            proxy_ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
            proxy_ssl_trusted_certificate {Path to Root Certificate file for Orchestrator}/{Root Certificate pem File Name};
            proxy_ssl_verify on;
            proxy_ssl_verify_depth 2;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host orchestrator.nbdlab.local;
            proxy_set_header X_FORWARDED_PROTO https;
        }

        location /MixedAuth {

	    proxy_ssl_server_name on;
            proxy_ssl_name {Orchestrator Server Name};
            proxy_pass https://orchestrator;
            proxy_ssl_session_reuse off;
            proxy_redirect https://{Orchestrator Server Name} https://{Nginx-listenning Server Name};

            proxy_http_version 1.1;  
            proxy_ssl_password_file {Path to password file for Orchestrator}/{Password File Name};
            proxy_ssl_certificate {Path to Certificate file for Orchestrator}/{Certificate File Name};
            proxy_ssl_certificate_key {Path to private key file for Orchestrator}/{Private Key File Name};
            proxy_ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
            proxy_ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
            proxy_ssl_trusted_certificate {Path to Root Certificate file for Orchestrator}/{Root Certificate pem File Name};
            proxy_ssl_verify on;
            proxy_ssl_verify_depth 2;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host orchestrator.nbdlab.local;
            proxy_set_header X_FORWARDED_PROTO https;
            proxy_set_header Connection "";

        }

        location /signalr {

	    proxy_ssl_server_name on;
            proxy_ssl_name {Orchestrator Server Name};
            proxy_pass https://orchestrator;
            proxy_ssl_session_reuse off;
            proxy_redirect https://{Orchestrator Server Name} https://{Nginx-listenning Server Name};

            proxy_http_version 1.1;  
            proxy_ssl_password_file {Path to password file for Orchestrator}/{Password File Name};
            proxy_ssl_certificate {Path to Certificate file for Orchestrator}/{Certificate File Name};
            proxy_ssl_certificate_key {Path to private key file for Orchestrator}/{Private Key File Name};
            proxy_ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
            proxy_ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
            proxy_ssl_trusted_certificate {Path to Root Certificate file for Orchestrator}/{Root Certificate pem File Name};
            proxy_ssl_verify on;
            proxy_ssl_verify_depth 2;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host orchestrator.nbdlab.local;
            proxy_set_header X_FORWARDED_PROTO https;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

        }

        # This directive prohibits user to access swagger page.
        location /swagger {
            root   html;
            index  50x.html;
        }

        # This directive forward REST API request from users to MuleSoft Standalone server.
        location ~ (^/api/)|(^/odata/)  {
            proxy_http_version 1.1;  
            proxy_pass http://mulesoft;
            proxy_ssl_session_reuse off;
            proxy_redirect http://localhost:8081 https://{Nginx-listenning Server Name};
            proxy_ssl_verify off;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host orchestrator.nbdlab.local;
            proxy_set_header X_FORWARDED_PROTO https;
        }
    }

}
